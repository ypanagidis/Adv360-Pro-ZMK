/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hmr_test_left: hmr_test_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_TEST_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            flavor = "balanced";
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 54 55 56 57 58 59 68 69 70 71 72 73 74 75 37 53 35 36 52 65 66 67>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESCAPE  &kp N1          &kp N2              &kp N3              &kp N4            &kp N5  &kp GRAVE                                                                             &kp BACKSLASH  &kp N6  &kp N7             &kp N8               &kp N9                &kp N0                 &kp MINUS
&kp TAB     &kp Q           &kp W               &kp E               &kp R             &kp T   &kp MINUS                                                                             &kp EQUAL      &kp Y   &kp U              &kp I                &kp O                 &kp P                  &kp BSLH
&kp TAB     &hm LEFT_ALT A  &hm LEFT_COMMAND S  &hm LEFT_CONTROL D  &hm LEFT_SHIFT F  &kp G   &kp LBKT   &kp LEFT_SHIFT  &to 1                 &mo 2              &kp LEFT_CONTROL  &kp RBKT       &kp H   &hm RIGHT_SHIFT J  &hm RIGHT_CONTROL K  &hm RIGHT_COMMAND L   &hm LEFT_ALT SEMI      &kp SINGLE_QUOTE
&kp LSHFT   &kp Z           &kp X               &kp C               &kp V             &kp B                              &kp LEFT_ALT          &kp RIGHT_COMMAND                                   &kp N   &kp M              &kp COMMA            &kp DOT               &kp FSLH               &kp RSHFT
&mo 0       &kp GRAVE       &kp TAB             &kp LEFT            &kp RIGHT                 &kp SPACE  &mo 1           &kp LEFT_COMMAND      &kp ENTER          &kp ENTER         &kp BACKSPACE          &kp DOWN           &kp UP_ARROW         &kp NON_US_BACKSLASH  &kp RIGHT_PARENTHESIS  &mo 0
            >;
        };

        layer_1 {
            bindings = <
&kp ESCAPE  &kp N1          &kp N2                  &kp N3                             &kp N4                       &kp N5     &kp GRAVE                                                                         &kp BACKSLASH  &kp N6     &kp N7                             &kp N8                           &kp N9                   &kp N0                 &kp MINUS
&kp TAB     &kp Q           &kp W                   &kp LCTRL                          &kp DOLLAR                   &kp GRAVE  &kp MINUS                                                                         &kp EQUAL      &kp SLASH  &kp COMMA                          &kp PERIOD                       &kp NON_US_BACKSLASH     &kp P                  &kp BSLH
&kp TAB     &hm LEFT_ALT A  &hm LEFT_COMMAND MINUS  &hm LEFT_CONTROL RS(LEFT_BRACKET)  &hm LEFT_SHIFT LEFT_BRACKET  &kp G      &kp LBKT   &kp LEFT_SHIFT  &to 2             &mo 2              &kp LEFT_CONTROL  &kp RBKT       &kp H      &hm RIGHT_SHIFT RIGHT_PARENTHESIS  &hm RIGHT_CONTROL RIGHT_BRACKET  &hm RIGHT_COMMAND EQUAL  &hm LEFT_ALT SEMI      &kp SINGLE_QUOTE
&kp LSHFT   &kp Z           &kp X                   &kp C                              &kp V                        &kp B                                 &kp LEFT_ALT      &kp RIGHT_COMMAND                                   &kp N      &kp M                              &kp COMMA                        &kp DOT                  &kp FSLH               &kp RSHFT
&mo 0       &kp GRAVE       &kp TAB                 &kp LEFT                           &kp RIGHT                               &kp SPACE  &mo 2           &to 0             &kp ENTER          &kp ENTER         &kp BACKSPACE             &kp DOWN                           &kp UP_ARROW                     &kp NON_US_BACKSLASH     &kp RIGHT_PARENTHESIS  &mo 0
            >;
        };

        layer_2 {
            bindings = <
&kp EQUAL  &kp N1         &kp N2     &kp N3                &kp N4            &kp N5    &trans                                                      &mo 0        &kp N6                &kp KP_NUM             &kp KP_EQUAL                 &kp KP_DIVIDE      &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q          &kp W      &kp E                 &kp R             &kp T     &bootloader                                                 &bootloader  &kp Y                 &kp KP_N7              &kp KP_N8                    &kp KP_N9          &kp KP_MINUS     &kp BSLH
&kp ESC    &kp LESS_THAN  &kp MINUS  &hm LEFT_SHIFT EQUAL  &kp GREATER_THAN  &kp PIPE  &bl BL_OFF   &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &hm LEFT_SHIFT LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SLASH        &kp SQT
&kp LSHFT  &kp Z          &kp X      &kp C                 &kp V             &kp B                             &kp HOME      &kp PG_UP                          &kp N                 &kp KP_N1              &kp KP_N2                    &kp KP_N3          &kp KP_ENTER     &kp RSHFT
&mo 0      &tog 0         &tog 0     &kp LEFT              &kp RIGHT                   &kp BSPC     &kp DEL    &to 0         &to 0      &kp ENTER  &kp KP_N0                          &kp UP                 &kp DOWN                     &kp KP_DOT         &tog 0           &mo 0
            >;
        };

        layer_3 {
            bindings = <
&kp ESCAPE  &kp N1     &kp N2   &kp N3    &kp N4     &kp N5  &kp GRAVE                                                                         &kp BACKSLASH  &kp N6  &kp N7    &kp N8        &kp N9                &kp N0                 &bootloader
&kp TAB     &kp Q      &kp W    &kp E     &kp R      &kp T   &kp MINUS                                                                         &kp EQUAL      &kp Y   &kp U     &kp I         &kp O                 &kp P                  &kp BSLH
&kp TAB     &kp A      &kp S    &kp D     &kp F      &kp G   &kp LBKT   &kp ESCAPE      &to 1             &mo 2              &kp LEFT_CONTROL  &kp RBKT       &kp H   &kp J     &kp K         &kp L                 &kp SEMICOLON          &kp SINGLE_QUOTE
&kp LSHFT   &kp Z      &kp X    &kp C     &kp V      &kp B                              &kp LEFT_ALT      &kp RIGHT_COMMAND                                   &kp N   &kp M     &kp COMMA     &kp DOT               &kp FSLH               &kp RSHFT
&mo 0       &kp GRAVE  &kp TAB  &kp LEFT  &kp RIGHT          &kp SPACE  &kp LEFT_SHIFT  &to 0             &kp ENTER          &kp ENTER         &kp BACKSPACE          &kp DOWN  &kp UP_ARROW  &kp NON_US_BACKSLASH  &kp RIGHT_PARENTHESIS  &mo 0
            >;
        };
    };
};
